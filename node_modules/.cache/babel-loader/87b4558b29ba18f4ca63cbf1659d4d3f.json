{"ast":null,"code":"var _jsxFileName = \"D:\\\\Aprende\\\\Todos\\\\todos\\\\Todos\\\\src\\\\TodoContext\\\\TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/React.createContext();\n\nfunction TodoProvider(props) {\n  _s();\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n\n    if (newTodos[todoIndex].completed) {\n      newTodos[todoIndex].completed = false;\n    } else {\n      newTodos[todoIndex].completed = true;\n    }\n\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      loading,\n      error,\n      completedTodos,\n      totalTodos,\n      searchValue,\n      setSearchValue,\n      completeTodo,\n      addTodo,\n      deleteTodo,\n      searchedTodos,\n      openModal,\n      setOpenModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoProvider, \"h3pGET2z59JkgXBS4tH2Mj9LGrM=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = TodoProvider;\n\n/*#__PURE__*/\n_jsxDEV(TodoContext.Consumer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 1\n}, this);\n\nexport { TodoContext, TodoProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["D:/Aprende/Todos/todos/Todos/src/TodoContext/TodoContext.js"],"names":["React","useLocalStorage","TodoContext","createContext","TodoProvider","props","item","todos","saveItem","saveTodos","loading","error","searchValue","setSearchValue","useState","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props){\r\n\r\n    const {item:todos, saveItem:saveTodos, loading,error} = useLocalStorage('TODOS_V1',[]);\r\n  \r\n  \r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n  \r\n    let searchedTodos = [];\r\n  \r\n    if(!searchValue.length >= 1){\r\n      searchedTodos = todos;\r\n    }else{\r\n      searchedTodos = todos.filter(todo => {\r\n        const todoText = todo.text.toLowerCase();\r\n        const searchText = searchValue.toLowerCase();\r\n        return todoText.includes(searchText);\r\n      });\r\n      \r\n    }\r\n  \r\n  \r\n  \r\n  \r\n    const completeTodo = (text) => {\r\n      const todoIndex = todos.findIndex(todo => todo.text === text);\r\n  \r\n      const newTodos = [...todos];\r\n      if(newTodos[todoIndex].completed){\r\n        newTodos[todoIndex].completed = false;\r\n      }else{\r\n        newTodos[todoIndex].completed = true;\r\n      }\r\n      \r\n      saveTodos(newTodos);\r\n    };\r\n  \r\n    const deleteTodo = (text) => {\r\n      const todoIndex = todos.findIndex(todo => todo.text === text);\r\n      const newTodos = [...todos];\r\n      \r\n      newTodos.splice(todoIndex,1);\r\n     \r\n      saveTodos(newTodos);\r\n    };\r\n\r\n    const addTodo = (text) => {\r\n    \r\n      const newTodos = [...todos];\r\n      \r\n      newTodos.push({completed:false, text,});\r\n     \r\n      saveTodos(newTodos);\r\n    };\r\n  \r\n\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            completedTodos,\r\n            totalTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            completeTodo,\r\n            addTodo,\r\n            deleteTodo,\r\n            searchedTodos,\r\n            openModal,\r\n            setOpenModal\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n<TodoContext.Consumer></TodoContext.Consumer>\r\n\r\nexport { TodoContext, TodoProvider };"]},"metadata":{},"sourceType":"module"}