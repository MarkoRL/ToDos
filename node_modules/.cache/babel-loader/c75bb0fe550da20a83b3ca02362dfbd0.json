{"ast":null,"code":"var _jsxFileName = \"D:\\\\Aprende\\\\Todos\\\\todos\\\\Todos\\\\src\\\\componentes\\\\AppUI.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TodoCounter } from './TodoCounter';\nimport { TodoSearch } from './TodoSearch';\nimport { TodoList } from './TodoList';\nimport { TodoItem } from './TodoItem';\nimport { CreateTodoButton } from './CreateTodoButton';\nimport { TodoContext } from '../TodoContext/TodoContext';\nimport { Modal } from '../Modal/Modal';\nimport { TodoForm } from \"../TodoForm/TodoForm\";\nimport { TodosError } from \"./TodosError\";\nimport { TodosLoading } from \"./TodosLoading\";\nimport { EmptyTodos } from \"./EmptyTodos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppUI() {\n  _s();\n\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal\n  } = React.useContext(TodoContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      children: [error && /*#__PURE__*/_jsxDEV(TodosError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(TodosLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), !loading && !searchedTodos.length && /*#__PURE__*/_jsxDEV(EmptyTodos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 49\n      }, this), searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), !!openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppUI, \"kQd9s0NGEgyRAikTf5zS81Vm7Ig=\");\n\n_c = AppUI;\nexport { AppUI };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppUI\");","map":{"version":3,"sources":["D:/Aprende/Todos/todos/Todos/src/componentes/AppUI.js"],"names":["React","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButton","TodoContext","Modal","TodoForm","TodosError","TodosLoading","EmptyTodos","AppUI","error","loading","searchedTodos","completeTodo","deleteTodo","openModal","setOpenModal","useContext","length","map","todo","text","completed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;AAEA,SAASC,KAAT,GAAgB;AAAA;;AAEd,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA,YAAhC;AAA8CC,IAAAA,UAA9C;AAAyDC,IAAAA,SAAzD;AAAmEC,IAAAA;AAAnE,MAAmFnB,KAAK,CAACoB,UAAN,CAAiBd,WAAjB,CAAzF;AAEE,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACF,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADE,eAEF,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFE,eAIA,QAAC,QAAD;AAAA,iBACCO,KAAK,iBAAI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cADV,EAECC,OAAO,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFZ,EAGE,CAACA,OAAD,IAAY,CAACC,aAAa,CAACM,MAA5B,iBAAuC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHxC,EAKCN,aAAa,CAACO,GAAd,CAAkBC,IAAI,iBACrB,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,QAAA,SAAS,EAAED,IAAI,CAACE,SAHlB;AAIE,QAAA,UAAU,EAAE,MAAMT,YAAY,CAACO,IAAI,CAACC,IAAN,CAJhC;AAKE,QAAA,QAAQ,EAAE,MAAMP,UAAU,CAACM,IAAI,CAACC,IAAN;AAL5B,SACOD,IAAI,CAACC,IADZ;AAAA;AAAA;AAAA;AAAA,cADD,CALD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,EAoBG,CAAC,CAACN,SAAF,iBACC,QAAC,KAAD;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBJ,eA2BF,QAAC,gBAAD;AAAkB,MAAA,YAAY,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,YA3BE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GApCQP,K;;KAAAA,K;AAuCT,SAAQA,KAAR","sourcesContent":["import React from \"react\";\r\nimport { TodoCounter } from './TodoCounter';\r\nimport { TodoSearch } from './TodoSearch';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoItem } from './TodoItem';\r\nimport { CreateTodoButton } from './CreateTodoButton';\r\nimport { TodoContext } from '../TodoContext/TodoContext';\r\nimport { Modal } from '../Modal/Modal';\r\nimport { TodoForm } from \"../TodoForm/TodoForm\";\r\nimport {TodosError} from \"./TodosError\";\r\nimport {TodosLoading} from \"./TodosLoading\";\r\nimport {EmptyTodos} from \"./EmptyTodos\";\r\n\r\nfunction AppUI(){\r\n\r\n  const {error, loading, searchedTodos, completeTodo, deleteTodo,openModal,setOpenModal} = React.useContext(TodoContext);\r\n\r\n    return(\r\n        <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n     \r\n        <TodoList>\r\n        {error && <TodosError error={error} />}\r\n        {loading && <TodosLoading/>}\r\n        {(!loading && !searchedTodos.length) && <EmptyTodos/>}\r\n\r\n        {searchedTodos.map(todo => (\r\n          <TodoItem\r\n            key={todo.text}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodo(todo.text)}\r\n            onDelete={() => deleteTodo(todo.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n\r\n          {!!openModal &&(\r\n            <Modal>\r\n              <TodoForm></TodoForm>\r\n            </Modal>\r\n          )}\r\n    \r\n\r\n      <CreateTodoButton setOpenModal={setOpenModal}/>\r\n    </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport {AppUI};"]},"metadata":{},"sourceType":"module"}